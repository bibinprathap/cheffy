{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Skyslit\\\\Web Projects\\\\Freelance\\\\cheffy\\\\src\\\\components\\\\Layouts\\\\home\\\\FoodContent.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchFood, popularAndNew, allPlates, getCategory } from '../../../redux/actions/food';\nimport { Row, Col, Skeleton } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport FoodBanner from './FoodBanner';\nimport FoodGrid from './FoodGrid';\nimport FoodSearch from './FoodSearch';\nimport NewOnCheffy from './NewOnCheffy';\nimport PopularNearYou from './PopularNearYou';\nimport MustTryChef from './MustTryChef';\nimport RecommendedChef from './RecommendedChef';\nimport TopKitchens from \"./TopKitchens\";\nimport '../../../../styles/foodContent.css';\nimport { FoodGridSkeleton, NewAndPopularSkeleton } from '../Skeleton';\nimport Fuse from \"fuse.js\";\nimport Link from \"next/link\";\n\nvar FoodContent = function FoodContent() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      popular = _useState[0],\n      setPopular = _useState[1];\n\n  var _useState2 = useState(''),\n      _new = _useState2[0],\n      setNew = _useState2[1];\n\n  var _useState3 = useState(''),\n      category = _useState3[0],\n      setCategory = _useState3[1];\n\n  var itemCount = useSelector(countSelector, shallowEqual);\n\n  var _useState4 = useState(\"\"),\n      keyword = _useState4[0],\n      setKeyword = _useState4[1];\n\n  var _useState5 = useState([]),\n      results = _useState5[0],\n      setResults = _useState5[1];\n\n  var _useState6 = useState([]),\n      searchIn = _useState6[0],\n      setSearchIn = _useState6[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var allPlates, getNewAndPopular, resCategory;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return dispatch(popularAndNew());\n\n          case 2:\n            allPlates = _context.sent;\n            _context.next = 5;\n            return dispatch(popularAndNew());\n\n          case 5:\n            getNewAndPopular = _context.sent;\n            setPopular(getNewAndPopular.data.popular);\n            setNew(getNewAndPopular.data[\"new\"]);\n            _context.next = 10;\n            return dispatch(getCategory());\n\n          case 10:\n            resCategory = _context.sent;\n            console.log(resCategory.message);\n            setCategory(resCategory.data);\n            setSearchIn(allPlates.data.popular);\n            dispatch(fetchFood());\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n\n  var searchData = function searchData(pattern) {\n    setKeyword(pattern);\n    setResults([]);\n    var fuse = new Fuse(searchIn, {\n      keys: [\"name\"],\n      options: {\n        \"threshold\": 1,\n        \"distance\": 1000\n      }\n    });\n    var result = fuse.search(pattern);\n    var matches = [];\n\n    if (!result.length) {\n      setResults([]);\n    } else {\n      result.forEach(function (_ref2) {\n        var item = _ref2.item;\n\n        if (matches.length < 6) {\n          matches.push(item);\n        }\n      });\n      setResults(matches);\n    }\n\n    console.log(searchIn);\n    console.log(matches);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FoodBanner, {\n      keyword: keyword,\n      setKeyword: setKeyword,\n      searchData: searchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, _this), !keyword.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [itemCount ? /*#__PURE__*/_jsxDEV(FoodGrid, {\n        category: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 18\n      }, _this) : /*#__PURE__*/_jsxDEV(FoodGridSkeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 53\n      }, _this), /*#__PURE__*/_jsxDEV(Row, {\n        id: \"newOnCheffy\",\n        children: [_new.length ? /*#__PURE__*/_jsxDEV(NewOnCheffy, {\n          _new: _new\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, _this) : /*#__PURE__*/_jsxDEV(NewAndPopularSkeleton, {\n          title: \"New On Cheffy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 51\n        }, _this), popular.length ? /*#__PURE__*/_jsxDEV(PopularNearYou, {\n          popular: popular\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, _this) : /*#__PURE__*/_jsxDEV(NewAndPopularSkeleton, {\n          title: \"Popular Near You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 63\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(RecommendedChef, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(MustTryChef, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(TopKitchens, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }, _this) : /*#__PURE__*/_jsxDEV(FoodSearch, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(FoodContent, \"PZQgZM3jjoeA2NrdhWUvrOyw1sU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FoodContent;\nvar countSelector = createSelector(function (state) {\n  return state.food.collection;\n}, function (items) {\n  return items.length;\n});\nexport default FoodContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodContent\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Skyslit/Web Projects/Freelance/cheffy/src/components/Layouts/home/FoodContent.jsx"],"names":["React","useState","useEffect","fetchFood","popularAndNew","allPlates","getCategory","Row","Col","Skeleton","shallowEqual","useDispatch","useSelector","createSelector","FoodBanner","FoodGrid","FoodSearch","NewOnCheffy","PopularNearYou","MustTryChef","RecommendedChef","TopKitchens","FoodGridSkeleton","NewAndPopularSkeleton","Fuse","Link","FoodContent","dispatch","popular","setPopular","_new","setNew","category","setCategory","itemCount","countSelector","keyword","setKeyword","results","setResults","searchIn","setSearchIn","getNewAndPopular","data","resCategory","console","log","message","searchData","pattern","fuse","keys","options","result","search","matches","length","forEach","item","push","state","food","collection","items"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchFood, popularAndNew, allPlates, getCategory } from '../../../redux/actions/food';\r\nimport { Row, Col, Skeleton } from 'antd';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { createSelector } from 'reselect';\r\nimport FoodBanner from './FoodBanner';\r\nimport FoodGrid from './FoodGrid';\r\nimport FoodSearch from './FoodSearch';\r\nimport NewOnCheffy from './NewOnCheffy';\r\nimport PopularNearYou from './PopularNearYou';\r\nimport MustTryChef from './MustTryChef';\r\nimport RecommendedChef from './RecommendedChef';\r\nimport TopKitchens from \"./TopKitchens\";\r\nimport '../../../../styles/foodContent.css';\r\nimport { FoodGridSkeleton, NewAndPopularSkeleton } from '../Skeleton';\r\nimport Fuse from \"fuse.js\";\r\nimport Link from \"next/link\";\r\n\r\nconst FoodContent = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [popular, setPopular] = useState('');\r\n\tconst [_new, setNew] = useState('');\r\n\tconst [category, setCategory] = useState('');\r\n\tconst itemCount = useSelector(countSelector, shallowEqual);\r\n\tconst [keyword, setKeyword] = useState(\"\");\r\n\tconst [results, setResults] = useState([]);\r\n\tconst [searchIn, setSearchIn] = useState([]);\r\n\r\n\tuseEffect(async () => {\r\n\t\tvar allPlates = await dispatch(popularAndNew());\r\n\t\tconst getNewAndPopular = await dispatch(popularAndNew());\r\n\t\tsetPopular(getNewAndPopular.data.popular);\r\n\t\tsetNew(getNewAndPopular.data.new);\r\n\t\tconst resCategory = await dispatch(getCategory())\r\n\t\tconsole.log(resCategory.message)\r\n\t\tsetCategory(resCategory.data);\r\n\t\tsetSearchIn(allPlates.data.popular)\r\n\t\tdispatch(fetchFood());\r\n\t}, []);\r\n\r\n\r\n\tconst searchData = (pattern) => {\r\n\t\tsetKeyword(pattern)\r\n\t\tsetResults([]);\r\n\t\tconst fuse = new Fuse(searchIn, {\r\n\t\t\tkeys: [\"name\"],\r\n\t\t\toptions: { \"threshold\": 1, \"distance\": 1000 }\r\n\t\t});\r\n\r\n\t\tconst result = fuse.search(pattern);\r\n\t\tconst matches = [];\r\n\t\tif (!result.length) {\r\n\t\t\tsetResults([]);\r\n\t\t} else {\r\n\t\t\tresult.forEach(({ item }) => {\r\n\t\t\t\tif (matches.length < 6) {\r\n\t\t\t\t\tmatches.push(item);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetResults(matches);\r\n\t\t}\r\n\t\tconsole.log(searchIn)\r\n\t\tconsole.log(matches)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<FoodBanner keyword={keyword} setKeyword={setKeyword} searchData={searchData} />\r\n\t\t\t{!keyword.length ? <React.Fragment>\r\n\t\t\t\t{itemCount ? <FoodGrid category={category} /> : <FoodGridSkeleton />}\r\n\t\t\t\t<Row id=\"newOnCheffy\">\r\n\t\t\t\t\t{_new.length ? <NewOnCheffy _new={_new} /> : <NewAndPopularSkeleton title=\"New On Cheffy\" />}\r\n\t\t\t\t\t{popular.length ? <PopularNearYou popular={popular} /> : <NewAndPopularSkeleton title=\"Popular Near You\" />}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<RecommendedChef />\r\n\t\t\t\t\t<MustTryChef />\r\n\t\t\t\t\t<TopKitchens />\r\n\t\t\t\t</Row>\r\n\t\t\t</React.Fragment> :\r\n\t\t\t\t<FoodSearch results={results} />\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst countSelector = createSelector(\r\n\t(state) => state.food.collection,\r\n\t(items) => items.length\r\n);\r\n\r\nexport default FoodContent;\r\n"]},"metadata":{},"sourceType":"module"}