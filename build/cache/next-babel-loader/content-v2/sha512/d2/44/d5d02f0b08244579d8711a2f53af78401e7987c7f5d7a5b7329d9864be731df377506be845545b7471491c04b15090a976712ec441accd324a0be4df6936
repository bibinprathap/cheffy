{"ast":null,"code":"import axios from 'axios';\nimport { getSession } from 'next-auth/client';\nimport config from '../config';\nconst axiosClient = axios.create({\n  baseURL: `${config.BASE_URL}/`\n});\naxiosClient.interceptors.request.use(async function (config) {\n  //const token = localStorage.getItem('token');\n  const session = await getSession();\n\n  if (session && session.apiToken) {\n    // console.log('axiosClient session', session.apiToken);\n    config.headers['x-access-token'] = session.apiToken;\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxiosClient.interceptors.response.use(response => {\n  // console.debug('Axios onResponseSuccess', response);\n  return response.data;\n}, error => {\n  // console.debug('Axios onResponseError', error.response);\n  if (error.response && error.response.status === 403) {\n    return Promise.reject(error.response.data);\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosClient;","map":{"version":3,"sources":["C:/Users/user/Desktop/Skyslit/Web Projects/Freelance/cheffy/src/utils/axios-config.js"],"names":["axios","getSession","config","axiosClient","create","baseURL","BASE_URL","interceptors","request","use","session","apiToken","headers","error","Promise","reject","response","data","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,MAAN,CAAa;AAChCC,EAAAA,OAAO,EAAG,GAAEH,MAAM,CAACI,QAAS;AADI,CAAb,CAApB;AAIAH,WAAW,CAACI,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CACC,gBAAgBP,MAAhB,EAAwB;AACvB;AACA,QAAMQ,OAAO,GAAG,MAAMT,UAAU,EAAhC;;AACA,MAAIS,OAAO,IAAIA,OAAO,CAACC,QAAvB,EAAiC;AAChC;AACAT,IAAAA,MAAM,CAACU,OAAP,CAAe,gBAAf,IAAmCF,OAAO,CAACC,QAA3C;AACA;;AACD,SAAOT,MAAP;AACA,CATF,EAUC,UAAUW,KAAV,EAAiB;AAChB,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CAZF;AAeAV,WAAW,CAACI,YAAZ,CAAyBS,QAAzB,CAAkCP,GAAlC,CACEO,QAAD,IAAc;AACb;AACA,SAAOA,QAAQ,CAACC,IAAhB;AACA,CAJF,EAKEJ,KAAD,IAAW;AACV;AACA,MAAIA,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAeE,MAAf,KAA0B,GAAhD,EAAqD;AACpD,WAAOJ,OAAO,CAACC,MAAR,CAAeF,KAAK,CAACG,QAAN,CAAeC,IAA9B,CAAP;AACA;;AACD,SAAOH,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CAXF;AAcA,eAAeV,WAAf","sourcesContent":["import axios from 'axios';\r\nimport { getSession } from 'next-auth/client';\r\nimport config from '../config';\r\n\r\nconst axiosClient = axios.create({\r\n\tbaseURL: `${config.BASE_URL}/`,\r\n});\r\n\r\naxiosClient.interceptors.request.use(\r\n\tasync function (config) {\r\n\t\t//const token = localStorage.getItem('token');\r\n\t\tconst session = await getSession();\r\n\t\tif (session && session.apiToken) {\r\n\t\t\t// console.log('axiosClient session', session.apiToken);\r\n\t\t\tconfig.headers['x-access-token'] = session.apiToken;\r\n\t\t}\r\n\t\treturn config;\r\n\t},\r\n\tfunction (error) {\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n\r\naxiosClient.interceptors.response.use(\r\n\t(response) => {\r\n\t\t// console.debug('Axios onResponseSuccess', response);\r\n\t\treturn response.data;\r\n\t},\r\n\t(error) => {\r\n\t\t// console.debug('Axios onResponseError', error.response);\r\n\t\tif (error.response && error.response.status === 403) {\r\n\t\t\treturn Promise.reject(error.response.data);\r\n\t\t}\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n\r\nexport default axiosClient;\r\n"]},"metadata":{},"sourceType":"module"}