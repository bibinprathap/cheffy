{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk'; //import { loadingBarMiddleware } from 'react-redux-loading-bar';\n\nimport rootReducer from '../reducers';\nvar logger = createLogger({\n  collapsed: true\n});\n\nvar loadState = function loadState() {\n  try {\n    var serializedState = localStorage.getItem('cartitems');\n\n    if (serializedState === null) {\n      console.log(\"null\");\n      return undefined;\n    }\n\n    console.log(serializedState);\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nvar persistedState = loadState();\nexport default function configureStore(initialState) {\n  return createStore(rootReducer, initialState, applyMiddleware(thunk, reduxImmutableStateInvariant(), logger));\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/Skyslit/Web Projects/Freelance/cheffy/src/redux/store/configureStore.dev.js"],"names":["createStore","applyMiddleware","reduxImmutableStateInvariant","createLogger","thunk","rootReducer","logger","collapsed","loadState","serializedState","localStorage","getItem","console","log","undefined","JSON","parse","e","persistedState","configureStore","initialState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,4BAAP,MAAyC,iCAAzC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,IAAMC,MAAM,GAAGH,YAAY,CAAC;AAC3BI,EAAAA,SAAS,EAAE;AADgB,CAAD,CAA3B;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACvB,MAAI;AACF,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAxB;;AACA,QAAGF,eAAe,KAAK,IAAvB,EAA6B;AAC5BG,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACF,aAAOC,SAAP;AACE;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ;AACA,WAAOM,IAAI,CAACC,KAAL,CAAWP,eAAX,CAAP;AACD,GARD,CAQE,OAAOQ,CAAP,EAAU;AACV,WAAOH,SAAP;AACD;AACC,CAZH;;AAcA,IAAMI,cAAc,GAAGV,SAAS,EAAhC;AACA,eAAe,SAASW,cAAT,CAAwBC,YAAxB,EAAsC;AACpD,SAAOpB,WAAW,CAACK,WAAD,EAAce,YAAd,EAA4BnB,eAAe,CAACG,KAAD,EAAQF,4BAA4B,EAApC,EAAwCI,MAAxC,CAA3C,CAAlB;AACA","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n//import { loadingBarMiddleware } from 'react-redux-loading-bar';\r\nimport rootReducer from '../reducers';\r\nconst logger = createLogger({\r\n\tcollapsed: true,\r\n});\r\nconst loadState = () => {\r\n\ttry {\r\n\t  const serializedState = localStorage.getItem('cartitems');\r\n\t  if(serializedState === null) {\r\n\t\t  console.log(\"null\")\r\n\t\treturn undefined;\r\n\t  }\r\n\t  console.log(serializedState)\r\n\t  return JSON.parse(serializedState);\r\n\t} catch (e) {\r\n\t  return undefined;\r\n\t}\r\n  };\r\n\r\nconst persistedState = loadState()\r\nexport default function configureStore(initialState) {\r\n\treturn createStore(rootReducer, initialState, applyMiddleware(thunk, reduxImmutableStateInvariant(), logger));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}