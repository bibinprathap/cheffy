{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { getSession } from 'next-auth/client';\nimport config from '../config';\nvar axiosClient = axios.create({\n  baseURL: \"\".concat(config.BASE_URL, \"/\")\n});\naxiosClient.interceptors.request.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(config) {\n    var session;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getSession();\n\n          case 2:\n            session = _context.sent;\n\n            if (session && session.apiToken) {\n              // console.log('axiosClient session', session.apiToken);\n              config.headers['x-access-token'] = session.apiToken;\n            }\n\n            return _context.abrupt(\"return\", config);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  return Promise.reject(error);\n});\naxiosClient.interceptors.response.use(function (response) {\n  // console.debug('Axios onResponseSuccess', response);\n  return response.data;\n}, function (error) {\n  // console.debug('Axios onResponseError', error.response);\n  if (error.response && error.response.status === 403) {\n    return Promise.reject(error.response.data);\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosClient;","map":{"version":3,"sources":["C:/Users/user/Desktop/Skyslit/Web Projects/Freelance/cheffy/src/utils/axios-config.js"],"names":["axios","getSession","config","axiosClient","create","baseURL","BASE_URL","interceptors","request","use","session","apiToken","headers","error","Promise","reject","response","data","status"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,IAAMC,WAAW,GAAGH,KAAK,CAACI,MAAN,CAAa;AAChCC,EAAAA,OAAO,YAAKH,MAAM,CAACI,QAAZ;AADyB,CAAb,CAApB;AAIAH,WAAW,CAACI,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC;AAAA,sEACC,iBAAgBP,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEuBD,UAAU,EAFjC;;AAAA;AAEOS,YAAAA,OAFP;;AAGC,gBAAIA,OAAO,IAAIA,OAAO,CAACC,QAAvB,EAAiC;AAChC;AACAT,cAAAA,MAAM,CAACU,OAAP,CAAe,gBAAf,IAAmCF,OAAO,CAACC,QAA3C;AACA;;AANF,6CAOQT,MAPR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADD;;AAAA;AAAA;AAAA;AAAA,KAUC,UAAUW,KAAV,EAAiB;AAChB,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CAZF;AAeAV,WAAW,CAACI,YAAZ,CAAyBS,QAAzB,CAAkCP,GAAlC,CACC,UAACO,QAAD,EAAc;AACb;AACA,SAAOA,QAAQ,CAACC,IAAhB;AACA,CAJF,EAKC,UAACJ,KAAD,EAAW;AACV;AACA,MAAIA,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAeE,MAAf,KAA0B,GAAhD,EAAqD;AACpD,WAAOJ,OAAO,CAACC,MAAR,CAAeF,KAAK,CAACG,QAAN,CAAeC,IAA9B,CAAP;AACA;;AACD,SAAOH,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CAXF;AAcA,eAAeV,WAAf","sourcesContent":["import axios from 'axios';\r\nimport { getSession } from 'next-auth/client';\r\nimport config from '../config';\r\n\r\nconst axiosClient = axios.create({\r\n\tbaseURL: `${config.BASE_URL}/`,\r\n});\r\n\r\naxiosClient.interceptors.request.use(\r\n\tasync function (config) {\r\n\t\t//const token = localStorage.getItem('token');\r\n\t\tconst session = await getSession();\r\n\t\tif (session && session.apiToken) {\r\n\t\t\t// console.log('axiosClient session', session.apiToken);\r\n\t\t\tconfig.headers['x-access-token'] = session.apiToken;\r\n\t\t}\r\n\t\treturn config;\r\n\t},\r\n\tfunction (error) {\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n\r\naxiosClient.interceptors.response.use(\r\n\t(response) => {\r\n\t\t// console.debug('Axios onResponseSuccess', response);\r\n\t\treturn response.data;\r\n\t},\r\n\t(error) => {\r\n\t\t// console.debug('Axios onResponseError', error.response);\r\n\t\tif (error.response && error.response.status === 403) {\r\n\t\t\treturn Promise.reject(error.response.data);\r\n\t\t}\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n\r\nexport default axiosClient;\r\n"]},"metadata":{},"sourceType":"module"}